{"version":3,"sources":["components/EmployeesEditor/styles.module.scss","components/EmployeesEditor/EmployeesList/EmployeeItem/styles.module.scss","components/EmployeesEditor/EmployeesList/styles.module.scss","components/shared/Input/styles.module.scss","components/EmployeesEditor/ToolBar/styles.module.scss","components/EmployeesEditor/EditorPanel/styles.module.scss","utils/concatClasses.ts","utils/prettifyDate.ts","store/actions/types.ts","components/EmployeesEditor/EmployeesList/EmployeeItem/index.tsx","store/actions/employees.ts","components/EmployeesEditor/EmployeesList/index.tsx","models/entities/position-option.enum.ts","components/shared/Input/index.tsx","models/entities/employee.class.ts","data/index.ts","components/EmployeesEditor/EditorPanel/index.tsx","components/EmployeesEditor/ToolBar/index.tsx","components/EmployeesEditor/index.tsx","App.tsx","store/reducers/employees.ts","store/index.ts","index.tsx"],"names":["module","exports","concatClasses","classes","join","months","ADD_USER","REMOVE_USER","ALTER_USER","EmployeeItem","connect","state","ownProps","isSelected","employees","selected","id","employee","dispatch","selectEmployee","type","date","className","styles","onClick","fullName","Sex","sex","undefined","birthDate","getDate","getMonth","getFullYear","getPositionName","isFired","PositionOption","EmployeesList","data","length","Label","Fragment","map","emp","key","Input","validate","value","valueChangedHandler","pattern","rusNaming","required","name","useState","rawValue","setRawValue","isValid","useEffect","InValid","onChange","event","target","onBlur","Employee","position","Developer","colleagues","positions","get","this","positionName","keys","values","findIndex","filter","find","colleagueId","Map","Designer","TeamLead","HR","Date","EditorPanel","updateEmployee","actionTypes","alterEmployee","getPosition","entries","pos","toISOString","split","toString","checked","multiple","selectedOptions","option","e","ToolBar","selectedEmployeeId","maxId","reduce","prevValue","deleteEmployee","employeeId","addEmployee","newEmployee","deleteButtonActive","AddButton","DeleteButton","style","opacity","cursor","EmployeesEditor","ListWithToolBar","App","height","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","action","newUser","_","cloneDeep","c","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.672c4d89.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListWithToolBar\":\"styles_ListWithToolBar__37ihc\",\"EditorPanel\":\"styles_EditorPanel__ttOCX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EmployeeItem\":\"styles_EmployeeItem__25EVc\",\"selected\":\"styles_selected__1GX1P\",\"Sex\":\"styles_Sex__2dyjz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EmployeesList\":\"styles_EmployeesList__1CNOo\",\"Label\":\"styles_Label__1M9Ga\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"styles_Input__ut_6s\",\"InValid\":\"styles_InValid__2xtxr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddButton\":\"styles_AddButton__2rf6Q\",\"DeleteButton\":\"styles_DeleteButton__5HJ-G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"styles_Label__pe1ay\"};","export function concatClasses(...classes:string[]):string{\r\n    return classes.join(' ') || '';\r\n}","const months = [\r\n  \"Января\",\r\n  \"Февраля\",\r\n  \"Марта\",\r\n  \"Апреля\",\r\n  \"Мая\",\r\n  \"Июня\",\r\n  \"Июля\",\r\n  \"Августа\",\r\n  \"Сентября\",\r\n  \"Октября\",\r\n  \"Ноября\",\r\n  \"Декабря\",\r\n];\r\n\r\nexport const prettifyDate = (date: Date | undefined): string =>\r\n  date\r\n    ? [date.getDate(), months[date.getMonth()], date.getFullYear()].join(\" \")\r\n    : \"-\";\r\n","export const ADD_USER = '[Employees] Add User';\r\nexport const REMOVE_USER = '[Employees] Remove User';\r\nexport const ALTER_USER = '[Employees] Alter User';\r\n\r\nexport const SELECT_EMPLOYEE = '[Employees] Select Employee';","import React from \"react\";\r\nimport { concatClasses } from \"../../../../utils/concatClasses\";\r\nimport styles from \"./styles.module.scss\";\r\nimport { Employee } from \"../../../../models/entities/employee.class\";\r\nimport { prettifyDate } from \"../../../../utils/prettifyDate\";\r\nimport { connect } from \"react-redux\";\r\nimport { IReducerState } from \"../../../../store\";\r\nimport { selectEmployee } from \"../../../../store/actions/employees\";\r\n\r\ninterface IProps {\r\n  employee: Employee;\r\n  isSelected: boolean;\r\n  selectEmployee: (employee: Employee | null) => any;\r\n}\r\n\r\nfunction EmployeeItemComponent({\r\n  employee,\r\n  isSelected,\r\n  selectEmployee,\r\n}: IProps) {\r\n  return (\r\n    <div\r\n      className={concatClasses(\r\n        styles.EmployeeItem,\r\n        `container-fluid mb-3${ isSelected? \" \" + styles.selected : \"\"}`\r\n      )}\r\n      onClick={() => selectEmployee(isSelected?null:employee)}\r\n    >\r\n      <div className=\"row py-2\">\r\n        <div className=\"col-6 col-md-7 d-flex flex-column justify-content-center\">\r\n          <div className=\"row text-right\">\r\n            <div className=\"col-12\">\r\n              {employee.fullName}{\" \"}\r\n              <span className={concatClasses(styles.Sex, \"ml-2\")}>\r\n                {employee.sex ? \"М\" : employee.sex === undefined ? \"-\" : \"Ж\"}\r\n              </span>\r\n            </div>\r\n            <div className=\"col-12\">{prettifyDate(employee.birthDate)}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-6 col-md-5 d-flex flex-column justify-content-center text-right\">\r\n          <p className=\"mb-0\">{employee.getPositionName()}</p>\r\n          <p className=\"mb-0\">\r\n            {employee.isFired\r\n              ? \"Уволен\"\r\n              : employee.isFired === undefined\r\n              ? \"-\"\r\n              : \"В штате\"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: IReducerState, ownProps:any) => ({\r\n  isSelected: state.employees.selected?.id === ownProps.employee.id,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  selectEmployee: (employee: Employee | null) =>\r\n    dispatch(selectEmployee(employee)),\r\n});\r\n\r\nexport const EmployeeItem = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EmployeeItemComponent);\r\n","import * as actionTypes from \"./types\";\r\nimport { Employee } from \"../../models/entities/employee.class\";\r\nimport { IAction } from \"../../models/action.interface\";\r\n\r\nexport const addEmployee = (newEmployee: Employee): IAction => ({\r\n  type: actionTypes.ADD_USER,\r\n  newEmployee,\r\n});\r\n\r\nexport const removeEmployee = (employeeId: number): IAction => ({\r\n  type: actionTypes.REMOVE_USER,\r\n  employeeId,\r\n});\r\n\r\nexport const alterEmployee = (employee: Employee): IAction => ({\r\n  type: actionTypes.ALTER_USER,\r\n  employee,\r\n});\r\n\r\nexport const selectEmployee = (employee: Employee | null): IAction => ({\r\n  type: actionTypes.SELECT_EMPLOYEE,\r\n  employee,\r\n});","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Employee } from \"../../../models/entities/employee.class\";\r\nimport { IReducerState } from \"../../../store\";\r\nimport { EmployeeItem } from \"./EmployeeItem\";\r\nimport styles from \"./styles.module.scss\";\r\nimport { concatClasses } from \"../../../utils/concatClasses\";\r\n\r\ninterface IProps {\r\n  employees: Employee[];\r\n}\r\n\r\nfunction EmployeesListComponent({ employees }: IProps) {\r\n  return (\r\n    <div className={concatClasses(styles.EmployeesList, \"pr-3\")}>\r\n      {employees.length === 0 ? (\r\n        <div className={concatClasses(styles.Label, \"text-center\")}>\r\n          Работников еще нет!\r\n        </div>\r\n      ) : (\r\n        <React.Fragment>\r\n          {employees.map((emp) => (\r\n            <EmployeeItem key={emp.id} employee={emp} />\r\n          ))}\r\n        </React.Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: IReducerState) => ({\r\n  employees: state.employees.data,\r\n});\r\n\r\nexport const EmployeesList = connect(mapStateToProps)(EmployeesListComponent);\r\n","export enum PositionOption{\r\n    Developer,\r\n    Designer,\r\n    TeamLead,\r\n    HR,\r\n}","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { concatClasses } from \"../../../utils/concatClasses\";\r\nimport styles from \"./styles.module.scss\";\r\n\r\ninterface IProps {\r\n  value: any;\r\n  valueChangedHandler: any;\r\n  pattern?: string;\r\n  validate?: any;\r\n  rusNaming: string;\r\n  type: string;\r\n  required: boolean;\r\n  name?:string;\r\n}\r\n\r\nexport function Input({\r\n  validate,\r\n  value,\r\n  valueChangedHandler,\r\n  pattern,\r\n  rusNaming,\r\n  type,\r\n  required,\r\n  name,\r\n}: IProps) {\r\n  const [rawValue, setRawValue] = useState(value);\r\n  const [isValid, setIsValid] = useState(true);\r\n\r\n  useEffect(()=>{\r\n    setRawValue(value)\r\n  }, [value]);\r\n\r\n  function inputHandler() {\r\n    valueChangedHandler(rawValue);\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label className=\"mb-0 pb-1 mr-2\">{rusNaming}</label>\r\n      <input\r\n        className={concatClasses(\r\n          styles.Input,\r\n          `form-control${isValid ? \"\" : \" \" + styles.InValid}`\r\n        )}\r\n        required={required}\r\n        pattern={pattern}\r\n        value={rawValue}\r\n        onChange={(event) => setRawValue(event.target.value)}\r\n        onBlur={inputHandler}\r\n        type={type}\r\n        name={name}\r\n      ></input>\r\n    </div>\r\n  );\r\n}\r\n","import { PositionOption } from \"./position-option.enum\";\r\nimport { positions, employees } from \"../../data\";\r\n\r\nexport class Employee {\r\n  constructor(\r\n    public id: number,\r\n    public fullName: string = \"Неизвестно\",\r\n    public position: PositionOption = PositionOption.Developer,\r\n    public birthDate?: Date,\r\n    public sex?: boolean,\r\n    public isFired?: boolean,\r\n    public colleagues?: number[]\r\n  ) {}\r\n\r\n  public getPositionName(): string {\r\n    return positions.get(this.position) || \"\";\r\n  }\r\n\r\n  public getPosition(positionName: string): PositionOption {\r\n    return [...positions.keys()][\r\n      [...positions.values()].findIndex((value) => value === positionName)\r\n    ];\r\n  }\r\n\r\n  public getColleagues(): Employee[] {\r\n    return employees.filter(({ id }) =>\r\n      this.colleagues?.find((colleagueId) => colleagueId === id)\r\n    );\r\n  }\r\n}\r\n","import { PositionOption } from \"../models/entities/position-option.enum\";\r\nimport { Employee } from \"../models/entities/employee.class\";\r\n\r\nexport const positions = new Map<PositionOption, string>([\r\n  [PositionOption.Developer, \"Разработчик\"],\r\n  [PositionOption.Designer, \"Дизайнер\"],\r\n  [PositionOption.TeamLead, \"Тимлид\"],\r\n  [PositionOption.HR, \"HR\"],\r\n]);\r\n\r\nexport const employees: Employee[] = [\r\n  new Employee(\r\n    1,\r\n    \"Иванов Иван Иванович\",\r\n    PositionOption.Developer,\r\n    new Date(\"1980-03-04\"),\r\n    true,\r\n    false,\r\n    [2, 3, 4]\r\n  ),\r\n  new Employee(\r\n    2,\r\n    \"Петров Петр Петрович\",\r\n    PositionOption.Designer,\r\n    new Date(\"1991-01-07\"),\r\n    true,\r\n    false,\r\n    [1, 3, 4]\r\n  ),\r\n  new Employee(\r\n    3,\r\n    \"Исаева Карина Антоновна\",\r\n    PositionOption.HR,\r\n    new Date(\"1995-05-11\"),\r\n    false,\r\n    false,\r\n    [1, 2, 4]\r\n  ),\r\n  new Employee(\r\n    4,\r\n    \"Львова Алина Васильевна\",\r\n    PositionOption.TeamLead,\r\n    new Date(\"1975-09-07\"),\r\n    false,\r\n    false,\r\n    [1, 2, 3]\r\n  ),\r\n];\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Input } from \"../../shared/Input\";\r\nimport { Employee } from \"../../../models/entities/employee.class\";\r\nimport { alterEmployee } from \"../../../store/actions/employees\";\r\nimport { positions } from \"../../../data\";\r\nimport { IReducerState } from \"../../../store\";\r\nimport { concatClasses } from \"../../../utils/concatClasses\";\r\nimport styles from \"./styles.module.scss\";\r\n\r\ninterface IProps {\r\n  employee: Employee | null;\r\n  employees: Employee[];\r\n  updateEmployee: (employee: Employee) => void;\r\n}\r\n\r\nfunction EditorPanelComponent({ employee, updateEmployee, employees }: IProps) {\r\n  return (\r\n    <div className=\"container py-5\">\r\n      {employee ? (\r\n        <div className=\"row\">\r\n          <div className=\"col-12 d-flex flex-column\">\r\n            <Input\r\n              value={employee?.fullName}\r\n              rusNaming=\"ФИО:\"\r\n              required={true}\r\n              type=\"text\"\r\n              valueChangedHandler={(value: string) => {\r\n                employee.fullName = value;\r\n                updateEmployee(employee);\r\n              }}\r\n            />\r\n            <div className=\"form-group\">\r\n              <label>Должность:</label>\r\n              <select\r\n                className=\"form-control\"\r\n                value={employee.getPositionName()}\r\n                onChange={(event) => {\r\n                  employee.position = employee.getPosition(event.target.value);\r\n                  updateEmployee(employee);\r\n                }}\r\n              >\r\n                {[...positions.entries()].map((pos) => (\r\n                  <option key={pos[0]}>{pos[1]}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <Input\r\n              type=\"date\"\r\n              value={\r\n                employee.birthDate\r\n                  ? employee.birthDate.toISOString().split(\"T\")[0]\r\n                  : \"\"\r\n              }\r\n              rusNaming=\"Дата рождения:\"\r\n              valueChangedHandler={(value: string) => {\r\n                if (new Date(value).toString() === \"Invalid Date\") {\r\n                  return;\r\n                }\r\n                employee.birthDate = new Date(value);\r\n                updateEmployee(employee);\r\n              }}\r\n              required={false}\r\n            />\r\n            <fieldset className=\"form-group\">\r\n              <legend className=\"col-form-label w-100\">Пол:</legend>\r\n              <div className=\"col-sm-10\">\r\n                <div className=\"form-check\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    name=\"sex\"\r\n                    checked={employee.sex}\r\n                    onChange={(event) => {\r\n                      employee.sex = true;\r\n                      updateEmployee(employee);\r\n                    }}\r\n                  />\r\n                  <label className=\"form-check-label\">Мужской</label>\r\n                </div>\r\n                <div className=\"form-check\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    name=\"sex\"\r\n                    checked={employee.sex === false}\r\n                    onChange={(event) => {\r\n                      employee.sex = false;\r\n                      updateEmployee(employee);\r\n                    }}\r\n                  />\r\n                  <label className=\"form-check-label\">Женский</label>\r\n                </div>\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-2 mr-2\">Уволен:</label>\r\n              <div className=\"col-sm-9\">\r\n                <div className=\"form-check pt-1\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    checked={employee.isFired}\r\n                    onChange={(event) => {\r\n                      employee.isFired = event.target.checked;\r\n                      updateEmployee(employee);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {employees.length === 1 ? null : (\r\n              <div className=\"form-group\">\r\n                <label>Коллеги:</label>\r\n                <select\r\n                  multiple\r\n                  className=\"form-control\"\r\n                  onChange={(event) => {\r\n                    const colleagues = [...event.target.selectedOptions].map(\r\n                      (option) => +option.value\r\n                    );\r\n                    employee.colleagues = colleagues;\r\n                    updateEmployee(employee);\r\n                  }}\r\n                >\r\n                  {employees\r\n                    .filter((emp) => emp.id !== employee.id)\r\n                    .map((emp) => (\r\n                      <option\r\n                        key={emp.id}\r\n                        value={emp.id}\r\n                        selected={\r\n                          employee.colleagues?.find((e) => e === emp.id) !==\r\n                          undefined\r\n                        }\r\n                      >\r\n                        {emp.fullName}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className={concatClasses(styles.Label, \"text-center\")}>\r\n          Выберите сотрудника!\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: IReducerState) => ({\r\n  employee: state.employees.selected,\r\n  employees: state.employees.data,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  updateEmployee: (employee: Employee) => dispatch(alterEmployee(employee)),\r\n});\r\n\r\nexport const EditorPanel = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EditorPanelComponent);\r\n","import React from \"react\";\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport styles from \"./styles.module.scss\";\r\nimport { removeEmployee, addEmployee } from \"../../../store/actions/employees\";\r\nimport { connect } from \"react-redux\";\r\nimport { IReducerState } from \"../../../store\";\r\nimport { Employee } from \"../../../models/entities/employee.class\";\r\n\r\ninterface IProps {\r\n  selectedEmployeeId: number;\r\n  deleteEmployee: (id: number) => void;\r\n  maxId: number;\r\n  addEmployee: (id: number) => any;\r\n}\r\n\r\nfunction ToolBarComponent({\r\n  selectedEmployeeId,\r\n  deleteEmployee,\r\n  addEmployee,\r\n  maxId,\r\n}: IProps) {\r\n  const deleteButtonActive: boolean = selectedEmployeeId !== -1;\r\n  return (\r\n    <div className=\"text-right pt-2\">\r\n      <AddBoxIcon\r\n        className={styles.AddButton}\r\n        onClick={() => addEmployee(maxId + 1)}\r\n      />\r\n      <DeleteIcon\r\n        className={styles.DeleteButton}\r\n        style={{\r\n          opacity: deleteButtonActive ? \"1\" : \".3\",\r\n          cursor: deleteButtonActive ? \"pointer\" : \"auto\",\r\n        }}\r\n        onClick={\r\n          deleteButtonActive\r\n            ? () => deleteEmployee(selectedEmployeeId)\r\n            : () => {}\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: IReducerState) => ({\r\n  selectedEmployeeId: state.employees.selected?.id || -1,\r\n  maxId: state.employees.data.reduce(\r\n    (prevValue, employee) =>\r\n      employee.id > prevValue ? employee.id : prevValue,\r\n    0\r\n  ),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any, ownProps: any) => ({\r\n  deleteEmployee: (id: number) => dispatch(removeEmployee(id)),\r\n  addEmployee: (id: number) => dispatch(addEmployee(new Employee(id))),\r\n});\r\n\r\nexport const ToolBar = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ToolBarComponent);\r\n","import React from \"react\";\r\n\r\nimport styles from \"./styles.module.scss\";\r\nimport { EmployeesList } from \"./EmployeesList\";\r\nimport { EditorPanel } from \"./EditorPanel\";\r\nimport { ToolBar } from \"./ToolBar\";\r\nimport { concatClasses } from \"../../utils/concatClasses\";\r\nimport { Employee } from \"../../models/entities/employee.class\";\r\n\r\ninterface IProps {\r\n  employees: Employee[];\r\n}\r\n\r\nexport function EmployeesEditor({ employees }: IProps) {\r\n  return (\r\n    <div\r\n      className={concatClasses(styles.EmployeesEditor, \"container h-100 py-5\")}\r\n    >\r\n      <div className=\"row h-100\">\r\n        <div\r\n          className={concatClasses(\r\n            styles.ListWithToolBar,\r\n            \"col-6 mr-5 d-flex flex-column h-100 pb-5\"\r\n          )}\r\n        >\r\n          <ToolBar />\r\n          <hr className=\"w-100\" />\r\n          <EmployeesList\r\n          />\r\n        </div>\r\n        <div className={concatClasses(styles.EditorPanel, \"col-5 h-100\")}>\r\n          <EditorPanel />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { EmployeesEditor } from \"./components/EmployeesEditor\";\n\nfunction App() {\n  return (\n    <div style={{ height: \"100vh\" }}>\n      <EmployeesEditor employees={[]}/>\n    </div>\n  );\n}\n\nexport default App;\n","import _ from \"lodash\";\r\n\r\nimport { Employee } from \"../../models/entities/employee.class\";\r\nimport { employees } from \"../../data\";\r\nimport { IAction } from \"../../models/action.interface\";\r\nimport * as actionTypes from \"../actions/types\";\r\n\r\nexport interface IState {\r\n  data: Employee[];\r\n  selected: Employee | null;\r\n}\r\n\r\nconst initialState: IState = { data: [...employees], selected: null };\r\n\r\nexport const reducer = (\r\n  state: IState = initialState,\r\n  action: IAction\r\n): IState => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_USER: {\r\n      return {\r\n        ...state,\r\n        data: [...state.data, action.newEmployee],\r\n        selected: action.newEmployee,\r\n      };\r\n    }\r\n    case actionTypes.ALTER_USER: {\r\n      const newUser = _.cloneDeep(action.employee);\r\n      return {\r\n        ...state,\r\n        data: [\r\n          ...state.data.map((employee) =>\r\n            employee.id === newUser.id ? newUser : employee\r\n          ),\r\n        ],\r\n        selected: newUser,\r\n      };\r\n    }\r\n    case actionTypes.REMOVE_USER: {\r\n      return {\r\n        ...state,\r\n        data: [\r\n          ...state.data\r\n            .filter(({ id: employeeId }) => employeeId !== action.employeeId)\r\n            .map((emp) => {\r\n              emp.colleagues = emp.colleagues?.filter(\r\n                (c) => c !== action.employeeId\r\n              );\r\n              return emp;\r\n            }),\r\n        ],\r\n        selected: null,\r\n      };\r\n    }\r\n    case actionTypes.SELECT_EMPLOYEE: {\r\n      return {\r\n        ...state,\r\n        selected: _.cloneDeep(action.employee),\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import {\r\n  reducer as employeesReducer,\r\n  IState as IEmployeesReducerState,\r\n} from \"./reducers/employees\";\r\nimport { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nconst composeEnhancers =\r\n  (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport interface IReducerState {\r\n  employees: IEmployeesReducerState;\r\n}\r\n\r\nexport const store = createStore(\r\n  combineReducers({ employees: employeesReducer }),\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport $ from \"jquery\";\nimport Popper from \"popper.js\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\n\nimport App from \"./App\";\nimport \"./index.scss\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}